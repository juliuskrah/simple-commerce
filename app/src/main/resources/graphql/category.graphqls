extend type Query {
    "Find a category by its ID. This allows you to access a taxonomy category, attributes and values of the loaded taxonomy tree"
    category(id: ID!): Category
    "Find all categories."
    categories(first: Int @Positive, after: String, last: Int @Positive, before: String,
        orderBy: [CategoryOrderField], orderDirection: OrderDirection = ASC):
    CategoryConnection! @Expression(value : "${args.containsOneOf('first','last')}")
}

extend type Mutation {
    "Create a new category in the taxonomy tree."
    addCategory(input: CategoryInput!): Category
    "Update an existing category."
    updateCategory("Category ID" id: ID!, input: CategoryInput!): Category
    "Delete a category. The category must not have any child categories."
    deleteCategory("Category ID" id: ID!): ID!
}

extend type Product {
    category: Category
}

"""
The Category Taxonomy resource lets you access the categories, attributes and values of a taxonomy tree.
"""
type Category implements Node {
    id: ID!
    ancestors(first: Int @Positive, after: String, last: Int @Positive, before: String):
        CategoryConnection! @Expression(value : "${args.containsOneOf('first','last')}")
    children(first: Int @Positive, after: String, last: Int @Positive, before: String):
        CategoryConnection! @Expression(value : "${args.containsOneOf('first','last')}")
    createdAt: DateTime!
    createdBy: Actor
    description: JsonString
    """
    Whether the category is a leaf category. A leaf category doesn't have any subcategories beneath it.
    For example, in Animals & Pet Supplies > Pet Supplies > Dog Supplies > Dog Treadmills,
    Dog Treadmills is a leaf category. The value is `true` when there are no `children` specified.
    """
    isLeaf: Boolean!
    """
    Whether the category is a root category. A root category is at the top level of the category hierarchy
    and doesn't have a parent category. For example, Animals & Pet Supplies. The value is `true` when
    there's no `parent` specified.
    """
    isRoot: Boolean!
    """
    The level of the category in the taxonomy tree. Levels indicate the depth of the category
    from the root. For example, in Animals & Pet Supplies > Pet Supplies > Dog Supplies,
    Animals & Pet Supplies is at level 1, Animals & Pet Supplies > Pet Supplies is at level 2,
    and Animals & Pet Supplies > Pet Supplies > Dog Supplies is at level 3.
    """
    level: Int!
    parent: Category
    slug: String!
    title: String!
    updatedAt: DateTime!
    updatedBy: Actor
    """
    The full name of the taxonomy category. For example, Animals & Pet Supplies > Pet Supplies > Dog Supplies > Dog Beds.
    """
    breadCrumb: String!
}

enum CategoryOrderField {
    id
    title
    createdAt
    updatedAt
}

input CategoryInput {
    "The title of the category."
    title: String!
    "The slug for the category. If not provided, it will be generated from the title."
    slug: String
    "Optional description of the category."
    description: String
    "Optional parent category ID. If not provided, the category will be created as a root category."
    parentId: ID
}